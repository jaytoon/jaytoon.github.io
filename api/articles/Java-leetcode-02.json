{"title":"779. 第K个语法符号","uid":"044719f90e921c152044a04088b57fe0","slug":"Java-leetcode-02","date":"2022-10-20T13:37:39.000Z","updated":"2022-10-20T13:47:33.685Z","comments":true,"path":"api/articles/Java-leetcode-02.json","keywords":null,"cover":"https://i0.hdslb.com/bfs/album/003da4126bfc8bee27a2a921d9b1432eb4be54ed.png","content":"<h1 id=\"1-题目内容\"><a href=\"#1-题目内容\" class=\"headerlink\" title=\"1.题目内容\"></a>1.题目内容</h1><p>我们构建了一个包含 n 行( 索引从 1  开始 )的表。首先在第一行我们写上一个 0。接下来的每一行，将前一行中的0替换为01，1替换为10。</p>\n<ul>\n<li>例如，对于 n &#x3D; 3 ，第 1 行是 0 ，第 2 行是 01 ，第3行是 0110 。<br>给定行数 n 和序数 k，返回第 n 行中第 k 个字符。（ k 从索引 1 开始）</li>\n</ul>\n<p><strong>示例 1</strong>:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">输入: n &#x3D; 1, k &#x3D; 1\n输出: 0\n解释: 第一行：0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>示例 2</strong>:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">输入: n &#x3D; 2, k &#x3D; 1\n输出: 0\n解释: \n第一行: 0 \n第二行: 01<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>示例 3</strong>:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">输入: n &#x3D; 2, k &#x3D; 2\n输出: 1\n解释:\n第一行: 0\n第二行: 01<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>提示:</p>\n<ul>\n<li>1 &lt;&#x3D; n &lt;&#x3D; 30</li>\n<li>1 &lt;&#x3D; k &lt;&#x3D; 2n - 1</li>\n</ul>\n<h1 id=\"2-我的解答\"><a href=\"#2-我的解答\" class=\"headerlink\" title=\"2.我的解答\"></a>2.我的解答</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">kthGrammar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> out<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> kCopy<span class=\"token operator\">=</span>k<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            k<span class=\"token operator\">=</span>k<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> \n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">int</span> temp<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>kCopy<span class=\"token operator\">-</span>temp<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>count<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    out<span class=\"token operator\">=</span><span class=\"token operator\">!</span>out<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>kCopy<span class=\"token operator\">-</span>temp<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                kCopy<span class=\"token operator\">-=</span>temp<span class=\"token punctuation\">;</span>\n                out<span class=\"token operator\">=</span><span class=\"token operator\">!</span>out<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> out<span class=\"token operator\">?</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"1.题目内容我们构建了一个包含 n 行( 索引从 1 开始 )的表。首先在第一行我们写上一个 0。接下来的每一行，将前一行中的0替换为01，1替换为10。 例如，对于 n &#x3D; 3 ，第 1 行是 0 ，第 2 行是 01 ，第3行是 0110 。给定行数 n 和序数 k...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java力扣","slug":"Java力扣","count":2,"path":"api/tags/Java力扣.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">1.题目内容</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94\"><span class=\"toc-text\">2.我的解答</span></a></li></ol>","author":{"name":"Jaytoon","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/06/76e7a3b7096a3622.jpg","link":"/","description":"记录研究生阶段的学习和生活","socials":{"github":"https://github.com/jaytoon","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45158610","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://www.bilibili.com/video/BV1TN4y1M72k"},"Tencent":{"icon":"/svg/Tencent.svg","link":"https://v.qq.com/biu/creator/home?vcuid=9001645637"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"1700. 无法吃午餐的学生数量","uid":"5cbd62134ec8d452bc82dacac671f507","slug":"Java-leetcode-01","date":"2022-10-19T15:50:48.000Z","updated":"2022-10-20T13:45:15.652Z","comments":true,"path":"api/articles/Java-leetcode-01.json","keywords":null,"cover":null,"text":"1.题目内容学校的自助午餐提供圆形和方形的三明治，分别用数字 0 和 1 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。餐厅里三明治的数量与学生的数量相同。所有三明治都放在一个 栈 里，每一轮： 如果队列最前面的学生 喜欢 栈顶的三明治，那么会 拿走它 并离...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java力扣","slug":"Java力扣","count":2,"path":"api/tags/Java力扣.json"}],"author":{"name":"Jaytoon","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/06/76e7a3b7096a3622.jpg","link":"/","description":"记录研究生阶段的学习和生活","socials":{"github":"https://github.com/jaytoon","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45158610","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://www.bilibili.com/video/BV1TN4y1M72k"},"Tencent":{"icon":"/svg/Tencent.svg","link":"https://v.qq.com/biu/creator/home?vcuid=9001645637"}}}},"feature":true}}